<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="ko"><generator uri="https://jekyllrb.com/" version="4.2.1">Jekyll</generator><link href="http://0.0.0.0:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://0.0.0.0:4000/" rel="alternate" type="text/html" hreflang="ko" /><updated>2022-03-13T04:31:06+00:00</updated><id>http://0.0.0.0:4000/feed.xml</id><title type="html">Star-sil’s Blog</title><subtitle>Your Site Description
</subtitle><author><name>star-sil</name><email>kimse9811@naver.com</email></author><entry><title type="html">[BOJ] 공유기 설치(2110)</title><link href="http://0.0.0.0:4000/2022/03/13/BOJ2110_%EA%B3%B5%EC%9C%A0%EA%B8%B0%EC%84%A4%EC%B9%98.html" rel="alternate" type="text/html" title="[BOJ] 공유기 설치(2110)" /><published>2022-03-13T00:00:00+00:00</published><updated>2022-03-13T00:00:00+00:00</updated><id>http://0.0.0.0:4000/2022/03/13/BOJ2110_%EA%B3%B5%EC%9C%A0%EA%B8%B0%EC%84%A4%EC%B9%98</id><content type="html" xml:base="http://0.0.0.0:4000/2022/03/13/BOJ2110_%EA%B3%B5%EC%9C%A0%EA%B8%B0%EC%84%A4%EC%B9%98.html"><![CDATA[<h2 id="문제">문제</h2>

<p><a href="https://www.acmicpc.net/problem/2110">BOJ_2110 공유기 설치</a><br /></p>

<!--more-->

<h2 id="문제-이해">문제 이해</h2>

<p>이 문제를 이해하는데 오랜 시간이 걸렸다. 내가 문제에 잘못 접근했기 때문인데 이분탐색을 적용해야되는 것은 알았지만 집의 위치에 이분탐색을 적용하려 했기 때문에 문제를 해결하지 못했다. <br />
이 문제는 이분탐색을 적용해야되는 문제이긴 하지만 <strong>최적의 집의 위치를 찾는데 사용하는 것이 아니라 최적의 공유기 사이의 거리를 구하는데</strong> 사용해야한다. 따라서 최소거리와 최대거리를 구하고, 두 거리 사이의 거리중에서 최적의 거리를 찾아야 한다. <br />
추가로 공유기 사이의 거리가 멀어질수록 설치 가능한 공유기의 개수는 적어진다.</p>

<h2 id="문제-풀이">문제 풀이</h2>

<p>공유기 사이의 거리에 따른 설치 가능한 공유기의 갯수를 구하는 것으로 문제를 풀어야한다. <br /> 공유기 사이의 거리가 멀어질수록 설치 가능한 공유기의 개수는 적어지므로 이분탐색을 통해 설치 가능한 공유기 갯수에 맞는 가장 큰 공유기 사이의 거리를 구한다.</p>

<h2 id="코드">코드</h2>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;algorithm&gt;</span><span class="cp">
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="kt">int</span> <span class="n">N</span><span class="p">,</span> <span class="n">C</span> <span class="p">,</span><span class="n">homes</span><span class="p">[</span><span class="mi">200000</span><span class="p">];</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">(){</span>
    <span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">N</span> <span class="o">&gt;&gt;</span> <span class="n">C</span><span class="p">;</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">N</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">){</span>
        <span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">homes</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
    <span class="p">}</span>

    <span class="n">sort</span><span class="p">(</span><span class="n">homes</span><span class="p">,</span><span class="n">homes</span> <span class="o">+</span> <span class="n">N</span><span class="p">);</span>

    <span class="kt">int</span> <span class="n">left</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="kt">int</span> <span class="n">right</span> <span class="o">=</span> <span class="n">homes</span><span class="p">[</span><span class="n">N</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">-</span> <span class="mi">1</span><span class="p">;</span>
    <span class="k">while</span><span class="p">(</span><span class="n">left</span> <span class="o">&lt;=</span> <span class="n">right</span><span class="p">){</span>
        <span class="kt">int</span> <span class="n">mid</span> <span class="o">=</span> <span class="p">(</span><span class="n">left</span> <span class="o">+</span> <span class="n">right</span><span class="p">)</span> <span class="o">/</span> <span class="mi">2</span><span class="p">;</span>
        <span class="kt">int</span> <span class="n">start</span> <span class="o">=</span> <span class="n">homes</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span>
        <span class="kt">int</span> <span class="n">cnt</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">N</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">){</span>
            <span class="k">if</span><span class="p">(</span><span class="n">homes</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">-</span> <span class="n">start</span> <span class="o">&gt;=</span> <span class="n">mid</span><span class="p">){</span>
                <span class="n">start</span> <span class="o">=</span> <span class="n">homes</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
                <span class="n">cnt</span><span class="o">++</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="p">}</span>
        <span class="k">if</span><span class="p">(</span><span class="n">cnt</span> <span class="o">&lt;</span> <span class="n">C</span><span class="p">){</span>
            <span class="n">right</span> <span class="o">=</span> <span class="n">mid</span> <span class="o">-</span> <span class="mi">1</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="k">else</span><span class="p">{</span>
            <span class="n">left</span> <span class="o">=</span> <span class="n">mid</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span> 
        <span class="p">}</span>
    <span class="p">}</span>

    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">right</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>]]></content><author><name>star-sil</name><email>kimse9811@naver.com</email></author><category term="BOJ" /><summary type="html"><![CDATA[문제 BOJ_2110 공유기 설치]]></summary></entry><entry><title type="html">[BOJ] 전화번호 목록(5052)</title><link href="http://0.0.0.0:4000/2022/03/06/BOJ5052_%EC%A0%84%ED%99%94%EB%B2%88%ED%98%B8%EB%AA%A9%EB%A1%9D.html" rel="alternate" type="text/html" title="[BOJ] 전화번호 목록(5052)" /><published>2022-03-06T00:00:00+00:00</published><updated>2022-03-06T00:00:00+00:00</updated><id>http://0.0.0.0:4000/2022/03/06/BOJ5052_%EC%A0%84%ED%99%94%EB%B2%88%ED%98%B8%EB%AA%A9%EB%A1%9D</id><content type="html" xml:base="http://0.0.0.0:4000/2022/03/06/BOJ5052_%EC%A0%84%ED%99%94%EB%B2%88%ED%98%B8%EB%AA%A9%EB%A1%9D.html"><![CDATA[<h2 id="문제">문제</h2>

<p><a href="https://www.acmicpc.net/problem/5052">BOJ_5052 전화번호 목록</a><br /></p>

<!--more-->

<h2 id="문제-이해">문제 이해</h2>

<p>전화번호들이 주어지면 전화번호들이 서로 일관성을 유지하고 있는지 알아보는 것이다.</p>

<p>일관성을 유지하는 기준은 하나의 번호가 다른 번호의 접두어인 경우가 없는 경우다.
예를들면 911, 91125426이 주어지면 서로 일관성을 유지하지 않는다.</p>

<h2 id="문제-풀이">문제 풀이</h2>

<p>각 전화번호를 비교하기 쉽도록 입력을 숫자가 아닌 문자열로 입력받고 정렬을 했다.</p>

<p>그러면 특징이 나타나게 되는데 바로 한 문자열이 다음 문자열에 속하지 않으면 이후 모든 문자열에 대해 속하지 않는다는 것이다.</p>

<p><img src="https://user-images.githubusercontent.com/70811575/156925607-7d1e0ddc-0229-4de2-b177-cb0b5a43e35e.jpeg" alt="BOJ5052" /></p>

<p>따라서 일관성을 유지한다는 의미는 각각의 모든 문자열이 다음 문자열에 속하지 않는다는 것을 의미한다. 만약 한 단어라도 다음 문자열에 속한다고 하면 일관성을 유지하지 않는다고 볼 수 있다.</p>

<h2 id="코드">코드</h2>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;algorithm&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;cstring&gt;</span><span class="cp">
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="n">string</span> <span class="n">callNum</span><span class="p">[</span><span class="mi">10000</span><span class="p">];</span>
<span class="kt">int</span> <span class="n">T</span><span class="p">,</span> <span class="n">N</span><span class="p">;</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">(){</span>
    <span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">T</span><span class="p">;</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">t</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">t</span> <span class="o">&lt;</span> <span class="n">T</span><span class="p">;</span> <span class="o">++</span><span class="n">t</span><span class="p">){</span>
        <span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">N</span><span class="p">;</span> <span class="kt">bool</span> <span class="n">sign</span> <span class="o">=</span> <span class="nb">false</span><span class="p">;</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">N</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">){</span>
            <span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">callNum</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
        <span class="p">}</span>

        <span class="n">sort</span><span class="p">(</span><span class="n">callNum</span><span class="p">,</span><span class="n">callNum</span><span class="o">+</span><span class="n">N</span><span class="p">);</span>
        
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">N</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">){</span>
            <span class="k">if</span><span class="p">(</span><span class="n">callNum</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">==</span> <span class="n">callNum</span><span class="p">[</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">].</span><span class="n">substr</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="n">callNum</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">size</span><span class="p">())){</span>
                <span class="n">sign</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
                <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">"NO"</span> <span class="o">&lt;&lt;</span> <span class="s">"</span><span class="se">\n</span><span class="s">"</span><span class="p">;</span>
                <span class="k">break</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="p">}</span>

        <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="n">sign</span><span class="p">)</span> <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">"YES"</span> <span class="o">&lt;&lt;</span> <span class="s">"</span><span class="se">\n</span><span class="s">"</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>]]></content><author><name>star-sil</name><email>kimse9811@naver.com</email></author><category term="BOJ" /><summary type="html"><![CDATA[문제 BOJ_5052 전화번호 목록]]></summary></entry><entry><title type="html">[BOJ] 알파벳(1987)</title><link href="http://0.0.0.0:4000/2022/02/20/BOJ1987_%EC%95%8C%ED%8C%8C%EB%B2%B3.html" rel="alternate" type="text/html" title="[BOJ] 알파벳(1987)" /><published>2022-02-20T00:00:00+00:00</published><updated>2022-02-20T00:00:00+00:00</updated><id>http://0.0.0.0:4000/2022/02/20/BOJ1987_%EC%95%8C%ED%8C%8C%EB%B2%B3</id><content type="html" xml:base="http://0.0.0.0:4000/2022/02/20/BOJ1987_%EC%95%8C%ED%8C%8C%EB%B2%B3.html"><![CDATA[<h2 id="문제">문제</h2>

<p><a href="https://www.acmicpc.net/problem/1986">BOJ_1987 알파벳</a><br /></p>

<!--more-->

<h2 id="문제-설명">문제 설명</h2>

<p>알파벳으로 이루어진 행렬이 주어지고 말은 상하좌우로 움직일 수 있는데 알파벳은 한번만 지나갈 수 있다. <br /> 
알파벳을 한번씩 밟으면서 최대로 몇칸 지날 수 있는지 알아내면 된다.</p>

<h2 id="문제-해결">문제 해결</h2>

<p>방문한 즉시 방문했다고 처리하면 추후에 다른 노드들이 방문을 못함 -&gt; 해당 노드만 방문했다고 처리하기 위해 다음 방문을 하려하기 전에 방문했다고 처리하고 다시 방문을 안했다고 설정한다..</p>

<p>graph는 전역 변수 이므로 모든 노드들이 방문여부를 공유한다. 따라서 하나의 노드가 방문해서 방문 처리를하면
다른 노드는 방문을 안했어도 해당 좌표에 방문을 한 것으로 된다.</p>

<h2 id="소스-코드">소스 코드</h2>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
</span><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="kt">int</span> <span class="n">R</span><span class="p">,</span><span class="n">C</span><span class="p">,</span><span class="n">result</span><span class="p">;</span>
<span class="kt">char</span> <span class="n">graph</span><span class="p">[</span><span class="mi">20</span><span class="p">][</span><span class="mi">20</span><span class="p">];</span>
<span class="kt">bool</span> <span class="n">visited</span><span class="p">[</span><span class="mi">26</span><span class="p">];</span>

<span class="kt">void</span> <span class="nf">dfs</span><span class="p">(</span><span class="kt">int</span> <span class="n">x</span><span class="p">,</span> <span class="kt">int</span> <span class="n">y</span><span class="p">,</span> <span class="kt">int</span> <span class="n">cnt</span><span class="p">){</span>
    <span class="kt">int</span> <span class="n">index</span> <span class="o">=</span> <span class="n">graph</span><span class="p">[</span><span class="n">x</span><span class="p">][</span><span class="n">y</span><span class="p">]</span> <span class="o">-</span> <span class="sc">'A'</span><span class="p">;</span>
    <span class="n">result</span> <span class="o">=</span> <span class="p">(</span><span class="n">cnt</span> <span class="o">&gt;</span> <span class="n">result</span><span class="p">)</span> <span class="o">?</span> <span class="n">cnt</span> <span class="o">:</span> <span class="n">result</span><span class="p">;</span>

    <span class="k">if</span><span class="p">(</span><span class="n">x</span> <span class="o">&lt;</span> <span class="n">R</span> <span class="o">&amp;&amp;</span> <span class="n">x</span> <span class="o">&gt;=</span> <span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="n">y</span> <span class="o">&lt;</span> <span class="n">C</span> <span class="o">&amp;&amp;</span> <span class="n">y</span> <span class="o">&gt;=</span> <span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="o">!</span><span class="n">visited</span><span class="p">[</span><span class="n">index</span><span class="p">]</span> <span class="o">&amp;&amp;</span> <span class="n">graph</span><span class="p">[</span><span class="n">x</span><span class="p">][</span><span class="n">y</span><span class="p">]</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">){</span>
        <span class="n">cnt</span><span class="o">++</span><span class="p">;</span> <span class="n">visited</span><span class="p">[</span><span class="n">index</span><span class="p">]</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
        
        <span class="n">dfs</span><span class="p">(</span><span class="n">x</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="n">y</span><span class="p">,</span><span class="n">cnt</span><span class="p">);</span> <span class="n">dfs</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span> <span class="n">cnt</span><span class="p">);</span> <span class="n">dfs</span><span class="p">(</span><span class="n">x</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="n">y</span><span class="p">,</span> <span class="n">cnt</span><span class="p">);</span> <span class="n">dfs</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="n">cnt</span><span class="p">);</span>
        
        <span class="n">visited</span><span class="p">[</span><span class="n">index</span><span class="p">]</span> <span class="o">=</span> <span class="nb">false</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">(){</span>
    <span class="n">std</span><span class="o">::</span><span class="n">ios</span><span class="o">::</span><span class="n">sync_with_stdio</span><span class="p">(</span><span class="nb">false</span><span class="p">);</span>
    <span class="n">cin</span><span class="p">.</span><span class="n">tie</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span>

    <span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">R</span> <span class="o">&gt;&gt;</span> <span class="n">C</span><span class="p">;</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">R</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">){</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="n">C</span><span class="p">;</span> <span class="o">++</span><span class="n">j</span><span class="p">){</span>
            <span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">graph</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">];</span>
        <span class="p">}</span>
    <span class="p">}</span>

    <span class="n">dfs</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span>

    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">result</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>]]></content><author><name>star-sil</name><email>kimse9811@naver.com</email></author><category term="BOJ" /><summary type="html"><![CDATA[문제 BOJ_1987 알파벳]]></summary></entry><entry><title type="html">[BOJ] 단어수학(1339)</title><link href="http://0.0.0.0:4000/2022/02/15/BOJ1339_%EB%8B%A8%EC%96%B4%EC%88%98%ED%95%99.html" rel="alternate" type="text/html" title="[BOJ] 단어수학(1339)" /><published>2022-02-15T00:00:00+00:00</published><updated>2022-02-15T00:00:00+00:00</updated><id>http://0.0.0.0:4000/2022/02/15/BOJ1339_%EB%8B%A8%EC%96%B4%EC%88%98%ED%95%99</id><content type="html" xml:base="http://0.0.0.0:4000/2022/02/15/BOJ1339_%EB%8B%A8%EC%96%B4%EC%88%98%ED%95%99.html"><![CDATA[<h2 id="문제">문제</h2>

<p><a href="https://www.acmicpc.net/problem/1339">BOJ_1339 단어수학</a><br /></p>

<!--more-->

<h2 id="문제-내용">문제 내용</h2>

<p>민식이는 수학학원에서 단어 수학 문제를 푸는 숙제를 받았다.</p>

<p>단어 수학 문제는 N개의 단어로 이루어져 있으며, 각 단어는 알파벳 대문자로만 이루어져 있다. 이때, 각 알파벳 대문자를 0부터 9까지의 숫자 중 하나로 바꿔서 N개의 수를 합하는 문제이다. 같은 알파벳은 같은 숫자로 바꿔야 하며, 두 개 이상의 알파벳이 같은 숫자로 바뀌어지면 안 된다.</p>

<p>예를 들어, GCF + ACDEB를 계산한다고 할 때, A = 9, B = 4, C = 8, D = 6, E = 5, F = 3, G = 7로 결정한다면, 두 수의 합은 99437이 되어서 최대가 될 것이다.</p>

<p>N개의 단어가 주어졌을 때, 그 수의 합을 최대로 만드는 프로그램을 작성하시오.</p>

<blockquote>
  <p>입력<br />
2<br />
AAA<br />
AAA</p>
</blockquote>

<blockquote>
  <p>출력<br />
1998</p>
</blockquote>

<h2 id="문제-해결">문제 해결</h2>

<p>문자열의 각 알파벳이 자리하고 있는 자리수를 파악하여 모두 더한 다음 큰 값을 가지고 있는 문자를 차례대로 나열하여 9~0을 배정한다.</p>

<h2 id="코드">코드</h2>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;bits/stdc++.h&gt;</span><span class="cp">
</span><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="kt">char</span> <span class="n">words</span><span class="p">[</span><span class="mi">10</span><span class="p">][</span><span class="mi">10</span><span class="p">];</span>
<span class="kt">int</span> <span class="n">alpha</span><span class="p">[</span><span class="mi">26</span><span class="p">],</span> <span class="n">result</span><span class="p">,</span> <span class="n">N</span><span class="p">,</span> <span class="n">len</span><span class="p">[</span><span class="mi">10</span><span class="p">];</span>

<span class="kt">bool</span> <span class="nf">DESC</span><span class="p">(</span><span class="kt">int</span> <span class="n">a</span><span class="p">,</span> <span class="kt">int</span> <span class="n">b</span><span class="p">){</span>
    <span class="k">return</span> <span class="n">a</span> <span class="o">&gt;</span> <span class="n">b</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">(){</span>
    
    <span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">N</span><span class="p">;</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">N</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">){</span>
        <span class="c1">//문자열 입력 가능</span>
        <span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">words</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
        <span class="c1">//문자열의 길이 파악 가능</span>
        <span class="n">len</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">strlen</span><span class="p">(</span><span class="n">words</span><span class="p">[</span><span class="n">i</span><span class="p">]);</span>
    <span class="p">}</span>

    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">N</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">){</span>
        <span class="kt">int</span> <span class="n">cal</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="n">len</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span> <span class="n">j</span> <span class="o">&gt;=</span> <span class="mi">0</span><span class="p">;</span> <span class="o">--</span><span class="n">j</span><span class="p">){</span>
            <span class="c1">//문자 연산을 통해 인덱스를 지정할 수 있다.</span>
            <span class="n">alpha</span><span class="p">[</span><span class="n">words</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span> <span class="o">-</span> <span class="sc">'A'</span><span class="p">]</span> <span class="o">+=</span> <span class="n">cal</span><span class="p">;</span>
            <span class="n">cal</span> <span class="o">*=</span> <span class="mi">10</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>

    <span class="n">sort</span><span class="p">(</span><span class="n">alpha</span><span class="p">,</span><span class="n">alpha</span><span class="o">+</span><span class="mi">26</span><span class="p">,</span> <span class="n">DESC</span><span class="p">);</span>

    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">10</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">){</span>
        <span class="n">result</span> <span class="o">+=</span> <span class="n">alpha</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">*</span> <span class="p">(</span><span class="mi">9</span> <span class="o">-</span> <span class="n">i</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">result</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>]]></content><author><name>star-sil</name><email>kimse9811@naver.com</email></author><category term="BOJ" /><summary type="html"><![CDATA[문제 BOJ_1339 단어수학]]></summary></entry><entry><title type="html">[BOJ] 행렬(1080)</title><link href="http://0.0.0.0:4000/2022/02/04/BOJ1080_%ED%96%89%EB%A0%AC.html" rel="alternate" type="text/html" title="[BOJ] 행렬(1080)" /><published>2022-02-04T00:00:00+00:00</published><updated>2022-02-04T00:00:00+00:00</updated><id>http://0.0.0.0:4000/2022/02/04/BOJ1080_%ED%96%89%EB%A0%AC</id><content type="html" xml:base="http://0.0.0.0:4000/2022/02/04/BOJ1080_%ED%96%89%EB%A0%AC.html"><![CDATA[<h2 id="문제">문제</h2>

<p><a href="https://www.acmicpc.net/problem/1080">BOJ_1080 행렬</a><br /></p>

<!--more-->

<h2 id="문제-이해">문제 이해</h2>

<p>이 문제는 두개의 행렬이 주어지는데 하나의 행렬을 3x3크기의 부분 행렬로 뒤집어서 두 행렬을 같도록 만드는 것이다. 뒤집을때는 3x3크기의 모든 원소를 다 뒤집어야 한다. ( 0 → 1, 1 → 0)</p>

<h2 id="문제-해결">문제 해결</h2>

<p>이 문제를 해결하기 위해서는 먼저 두 행렬을 비교해서 같은 부분과 같지 않은 부분을 0, 1로 표현한 행렬을 만들어야 한다.</p>

<p>예를들면,</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>3 4
0000
0010
0000
1001
1011
1001
</code></pre></div></div>

<ul>
  <li>3x4크기의 행렬 두개(입력값)</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
1001
1001
1001

</code></pre></div></div>

<ul>
  <li>두 행렬을 비교해서 같은 부분과 다른 부분을 표현한 행렬</li>
</ul>

<p>이런식으로 행렬을 표현할 수 있다.</p>

<p>두개를 비교한 행렬에서 첫번째 원소가 1이고 3x3크기의 부분행렬을 뒤집을 수 있으므로 뒤집을 수 있고 이렇게 계속 반복하게 되면 마지막 처럼 결과가 나올 수 있고 2번 뒤집는게 정답이 된다.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>0111
0111
0111
</code></pre></div></div>

<p>→</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>0111
0111
0111
</code></pre></div></div>

<p>→</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>0111
0111
0111
</code></pre></div></div>

<p>→</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>0000
0000
0000
</code></pre></div></div>

<p>하지만 여기서 주의할 점이 있다.</p>

<ol>
  <li>이미 두 행렬이 같은경우 3x3 부분행렬을 사용할 수 없는 경우에도 -1이 아닌 0이 결과로 출력되어야한다.</li>
  <li>입력값이 0000같이 붙어서 입력되므로 scanf(”%1d”,xx)를 사용해야되므로 ios_base를 사용하면 안된다.</li>
  <li>바꿔야 하는 원소(1인 원소)가 있는데 3x3크기의 범위를 벗어나서 뒤집을 수 없는경우 -1(바꿀수 없음)을 출력해야한다.</li>
</ol>

<h2 id="코드">코드</h2>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;bits/stdc++.h&gt;</span><span class="cp">
</span><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="kt">int</span> <span class="n">arr</span><span class="p">[</span><span class="mi">50</span><span class="p">][</span><span class="mi">50</span><span class="p">];</span>
<span class="kt">int</span> <span class="n">N</span><span class="p">,</span><span class="n">M</span><span class="p">,</span><span class="n">cnt</span><span class="p">;</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">(){</span>
    <span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">N</span> <span class="o">&gt;&gt;</span> <span class="n">M</span><span class="p">;</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">N</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">)</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="n">M</span><span class="p">;</span> <span class="o">++</span><span class="n">j</span><span class="p">)</span>
            <span class="n">scanf</span><span class="p">(</span><span class="s">"%1d"</span><span class="p">,</span><span class="o">&amp;</span><span class="n">arr</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]);</span>

    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">N</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">)</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="n">M</span><span class="p">;</span> <span class="o">++</span><span class="n">j</span><span class="p">){</span>
           <span class="kt">int</span> <span class="n">tmp</span><span class="p">;</span> <span class="n">scanf</span><span class="p">(</span><span class="s">"%1d"</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">tmp</span><span class="p">);</span>
           <span class="n">arr</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span> <span class="o">^=</span> <span class="n">tmp</span><span class="p">;</span> <span class="c1">//기존 행렬과 다른 경우 1 같은경우 0</span>
        <span class="p">}</span>  
    
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">N</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">)</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="n">M</span><span class="p">;</span> <span class="o">++</span><span class="n">j</span><span class="p">){</span>
            <span class="k">if</span><span class="p">(</span><span class="n">arr</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]){</span>
                <span class="c1">//바꿔야 하지만 범위가 넘어가는 경우 안된다고 판단</span>
                <span class="k">if</span><span class="p">(</span><span class="n">i</span> <span class="o">+</span> <span class="mi">2</span> <span class="o">&gt;=</span> <span class="n">N</span> <span class="o">||</span> <span class="n">j</span> <span class="o">+</span> <span class="mi">2</span> <span class="o">&gt;=</span> <span class="n">M</span><span class="p">){</span>
                    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
                    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
                <span class="p">}</span>

                <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">k</span> <span class="o">=</span> <span class="n">i</span><span class="p">;</span> <span class="n">k</span> <span class="o">&lt;</span> <span class="n">i</span> <span class="o">+</span> <span class="mi">3</span><span class="p">;</span> <span class="o">++</span><span class="n">k</span><span class="p">){</span>
                    <span class="n">arr</span><span class="p">[</span><span class="n">k</span><span class="p">][</span><span class="n">j</span><span class="p">]</span> <span class="o">^=</span> <span class="mi">1</span><span class="p">;</span>
                    <span class="n">arr</span><span class="p">[</span><span class="n">k</span><span class="p">][</span><span class="n">j</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span> <span class="o">^=</span> <span class="mi">1</span><span class="p">;</span>
                    <span class="n">arr</span><span class="p">[</span><span class="n">k</span><span class="p">][</span><span class="n">j</span><span class="o">+</span><span class="mi">2</span><span class="p">]</span> <span class="o">^=</span> <span class="mi">1</span><span class="p">;</span>
                <span class="p">}</span>

                <span class="n">cnt</span><span class="o">++</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="p">}</span>

    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">cnt</span><span class="p">;</span>
    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>]]></content><author><name>star-sil</name><email>kimse9811@naver.com</email></author><category term="BOJ" /><summary type="html"><![CDATA[문제 BOJ_1080 행렬]]></summary></entry><entry><title type="html">[BOJ] 책 나눠주기(9576)</title><link href="http://0.0.0.0:4000/2022/01/24/BOJ9576_%EC%B1%85%EB%82%98%EB%88%A0%EC%A3%BC%EA%B8%B0.html" rel="alternate" type="text/html" title="[BOJ] 책 나눠주기(9576)" /><published>2022-01-24T00:00:00+00:00</published><updated>2022-01-24T00:00:00+00:00</updated><id>http://0.0.0.0:4000/2022/01/24/BOJ9576_%EC%B1%85%EB%82%98%EB%88%A0%EC%A3%BC%EA%B8%B0</id><content type="html" xml:base="http://0.0.0.0:4000/2022/01/24/BOJ9576_%EC%B1%85%EB%82%98%EB%88%A0%EC%A3%BC%EA%B8%B0.html"><![CDATA[<h2 id="문제">문제</h2>

<p><a href="https://www.acmicpc.net/problem/9576">BOJ_9576 책 나눠주기</a><br /></p>

<!--more-->

<h2 id="문제-이해">문제 이해</h2>

<p>백준이는 방 청소를 하면서 필요없는 전공 서적을 사람들에게 나눠주려고한다. 이때 책을 줄 수 있는 최대 학생 수를 구해야한다. 학생들은 각자 a이상 b이하(1 ≤ a ≤ b ≤ N)의 책을 고르려한다.</p>

<h2 id="문제-풀이">문제 풀이</h2>

<p>각 학생들은 a ~ b 범위의 책을 고르려 함으로 최대로 학생들에게 책을 나눠주기 위해선 책의 관점으로 보면 된다. 책이 가장 많이 전달될려면 책을 받을 수 있는 사람들 중에 뒤에 받을 수 있는 책의 범위가 가장 작은 사람을 우선순위로 전달되어야 한다. 따라서 b를 기준으로 오름차순 정렬을 해서 순서대로 책을 나누어주면 가장 많은 사람들에게 나누어 줄 수 있다.</p>

<h2 id="코드">코드</h2>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;bits/stdc++.h&gt;</span><span class="cp">
</span><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="k">typedef</span> <span class="n">pair</span><span class="o">&lt;</span><span class="kt">int</span><span class="p">,</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">ii</span><span class="p">;</span>
<span class="k">typedef</span> <span class="n">vector</span><span class="o">&lt;</span><span class="n">ii</span><span class="o">&gt;</span> <span class="n">vii</span><span class="p">;</span>
<span class="n">vii</span> <span class="n">AL</span><span class="p">;</span>
<span class="kt">int</span> <span class="n">arr</span><span class="p">[</span><span class="mi">1001</span><span class="p">];</span>
<span class="kt">int</span> <span class="n">ct</span><span class="p">,</span> <span class="n">T</span><span class="p">;</span>

<span class="kt">bool</span> <span class="nf">compare</span><span class="p">(</span><span class="n">ii</span> <span class="n">a</span><span class="p">,</span> <span class="n">ii</span> <span class="n">b</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="n">a</span><span class="p">.</span><span class="n">second</span> <span class="o">==</span> <span class="n">b</span><span class="p">.</span><span class="n">second</span><span class="p">))</span>
        <span class="k">return</span> <span class="n">a</span><span class="p">.</span><span class="n">second</span> <span class="o">&lt;</span> <span class="n">b</span><span class="p">.</span><span class="n">second</span><span class="p">;</span>
    <span class="k">return</span> <span class="n">a</span><span class="p">.</span><span class="n">first</span> <span class="o">&lt;</span> <span class="n">b</span><span class="p">.</span><span class="n">first</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">(){</span>
    <span class="n">scanf</span><span class="p">(</span><span class="s">"%d"</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">T</span><span class="p">);</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">T</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">vii</span> <span class="n">AL</span><span class="p">;</span> <span class="kt">int</span> <span class="n">M</span><span class="p">,</span> <span class="n">N</span><span class="p">;</span> <span class="n">scanf</span><span class="p">(</span><span class="s">"%d %d"</span><span class="p">,</span><span class="o">&amp;</span><span class="n">N</span><span class="p">,</span><span class="o">&amp;</span><span class="n">M</span><span class="p">);</span>
        <span class="c1">//배열과 벡터 초기화</span>
        <span class="n">memset</span><span class="p">(</span><span class="n">arr</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="k">sizeof</span><span class="p">(</span><span class="n">arr</span><span class="p">));</span> <span class="n">AL</span><span class="p">.</span><span class="n">assign</span><span class="p">(</span><span class="n">M</span><span class="p">,</span><span class="n">ii</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">));</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="n">M</span><span class="p">;</span> <span class="o">++</span><span class="n">j</span><span class="p">){</span>
            <span class="kt">int</span> <span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">;</span> <span class="n">scanf</span><span class="p">(</span><span class="s">"%d %d"</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">a</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">b</span><span class="p">);</span>
            <span class="n">AL</span><span class="p">[</span><span class="n">j</span><span class="p">]</span> <span class="o">=</span> <span class="n">ii</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">);</span>
        <span class="p">}</span>
        <span class="n">sort</span><span class="p">(</span><span class="n">AL</span><span class="p">.</span><span class="n">begin</span><span class="p">(),</span><span class="n">AL</span><span class="p">.</span><span class="n">end</span><span class="p">(),</span><span class="n">compare</span><span class="p">);</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="n">M</span><span class="p">;</span> <span class="o">++</span><span class="n">j</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">k</span> <span class="o">=</span> <span class="n">AL</span><span class="p">[</span><span class="n">j</span><span class="p">].</span><span class="n">first</span><span class="p">;</span> <span class="n">k</span> <span class="o">&lt;=</span> <span class="n">AL</span><span class="p">[</span><span class="n">j</span><span class="p">].</span><span class="n">second</span><span class="p">;</span> <span class="o">++</span><span class="n">k</span><span class="p">){</span>
                <span class="k">if</span><span class="p">(</span><span class="n">arr</span><span class="p">[</span><span class="n">k</span><span class="p">]</span> <span class="o">==</span> <span class="mi">0</span><span class="p">){</span>
                    <span class="n">ct</span><span class="o">++</span><span class="p">;</span>
                    <span class="n">arr</span><span class="p">[</span><span class="n">k</span><span class="p">]</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
                    <span class="k">break</span><span class="p">;</span>
                <span class="p">}</span>
            <span class="p">}</span>
        <span class="p">}</span>
        <span class="n">printf</span><span class="p">(</span><span class="s">"%d</span><span class="se">\n</span><span class="s">"</span><span class="p">,</span><span class="n">ct</span><span class="p">);</span>
        <span class="n">ct</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>]]></content><author><name>star-sil</name><email>kimse9811@naver.com</email></author><category term="BOJ" /><summary type="html"><![CDATA[문제 BOJ_9576 책 나눠주기]]></summary></entry><entry><title type="html">[BOJ] 멀티탭 스케줄링(1700)</title><link href="http://0.0.0.0:4000/2022/01/19/BOJ1700_%EB%A9%80%ED%8B%B0%ED%83%AD%EC%8A%A4%EC%BC%80%EC%A4%84%EB%A7%81.html" rel="alternate" type="text/html" title="[BOJ] 멀티탭 스케줄링(1700)" /><published>2022-01-19T00:00:00+00:00</published><updated>2022-01-19T00:00:00+00:00</updated><id>http://0.0.0.0:4000/2022/01/19/BOJ1700_%EB%A9%80%ED%8B%B0%ED%83%AD%EC%8A%A4%EC%BC%80%EC%A4%84%EB%A7%81</id><content type="html" xml:base="http://0.0.0.0:4000/2022/01/19/BOJ1700_%EB%A9%80%ED%8B%B0%ED%83%AD%EC%8A%A4%EC%BC%80%EC%A4%84%EB%A7%81.html"><![CDATA[<h2 id="문제">문제</h2>

<p><a href="https://www.acmicpc.net/problem/1700">BOJ_1700 멀티탭 스케줄링</a><br /></p>

<!--more-->

<h2 id="문제-이해">문제 이해</h2>

<p>이 문제의 목표는 전기 용품의 플러그를 빼는 횟수를 최소화 하는 것이다.</p>

<p>만약 3개의 구멍이 있는 멀티 탭을 사용할 때 아래의 조건으로 전기 용품의 사용 순서가 주어진다면</p>

<blockquote>
  <p>키보드(1)</p>

  <p>헤어드라이기(2)</p>

  <p>핸드폰 충전기(3)</p>

  <p>키보드(1)</p>

  <p>헤어드라이기(2)</p>

  <p>디지털 카메라 충전기(4)</p>

</blockquote>

<p>순서대로 3개의 전기 용품을 멀티 탭에 꽂고 마지막 순서인 디지털 카메라 충전기를 꽂기전에 멀티 탭에 꽂힌 전기 용품 중 하나를 빼는것이 최적이므로 한번만 제거 한다.</p>

<h2 id="문제-풀이">문제 풀이</h2>

<p>우선 앞으로 꽂을 전기 용품은 멀티 탭이 비어있거나 멀티 탭에 이미 해당 전기 용품이 꽂힌 경우에는 이미 꽂혀있는 전기 용품을 뺄 필요가 없다. 따라서 조건을 두개로 나누어서 생각해야 한다.</p>

<ul>
  <li>멀티 탭이 비어있거나 멀티 탭에 이미 해당 전기 용품이 꽂힌 경우
    <ul>
      <li>플러그를 제거하지 않고 그냥 넘어간다.</li>
    </ul>
  </li>
  <li>멀티 탭이 비어있지 않고 해당 전기 용품이 꽂히지 않는 경우
    <ul>
      <li>꽂혀있는 전기 용품중에 다시 꽂을 일이 없거나 가장 늦게 다시 꽂아야 하는 전기 용품을 뺀다.</li>
    </ul>
  </li>
</ul>

<h2 id="코드">코드</h2>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
</span><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>
<span class="kt">int</span> <span class="n">N</span><span class="p">,</span> <span class="n">K</span><span class="p">,</span> <span class="n">result</span><span class="p">;</span>
<span class="kt">int</span> <span class="n">useArr</span><span class="p">[</span><span class="mi">100</span><span class="p">],</span> <span class="n">plug</span><span class="p">[</span><span class="mi">100</span><span class="p">];</span>
<span class="kt">int</span> <span class="nf">main</span><span class="p">()</span>
<span class="p">{</span>
    <span class="n">std</span><span class="o">::</span><span class="n">ios</span><span class="o">::</span><span class="n">sync_with_stdio</span><span class="p">(</span><span class="nb">false</span><span class="p">);</span>
    <span class="n">cin</span><span class="p">.</span><span class="n">tie</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span>
    <span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">N</span> <span class="o">&gt;&gt;</span> <span class="n">K</span><span class="p">;</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">K</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">)</span>
        <span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">useArr</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>

    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">K</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="kt">bool</span> <span class="n">plugin</span> <span class="o">=</span> <span class="nb">false</span><span class="p">;</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="n">N</span><span class="p">;</span> <span class="o">++</span><span class="n">j</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">if</span><span class="p">(</span><span class="n">plug</span><span class="p">[</span><span class="n">j</span><span class="p">]</span> <span class="o">==</span> <span class="mi">0</span> <span class="o">||</span> <span class="n">plug</span><span class="p">[</span><span class="n">j</span><span class="p">]</span> <span class="o">==</span> <span class="n">useArr</span><span class="p">[</span><span class="n">i</span><span class="p">])</span>
            <span class="p">{</span>
                <span class="n">plug</span><span class="p">[</span><span class="n">j</span><span class="p">]</span> <span class="o">=</span> <span class="n">useArr</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
                <span class="n">plugin</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
                <span class="k">break</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="p">}</span>

        <span class="k">if</span><span class="p">(</span><span class="n">plugin</span><span class="p">)</span> <span class="k">continue</span><span class="p">;</span>

        <span class="kt">int</span> <span class="n">max</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span> <span class="kt">int</span> <span class="n">index</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="n">N</span><span class="p">;</span> <span class="o">++</span><span class="n">j</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="kt">bool</span> <span class="n">check</span> <span class="o">=</span> <span class="nb">false</span><span class="p">;</span>
            <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">k</span> <span class="o">=</span> <span class="n">i</span><span class="p">;</span> <span class="n">k</span> <span class="o">&lt;</span> <span class="n">K</span><span class="p">;</span> <span class="o">++</span><span class="n">k</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="k">if</span><span class="p">(</span><span class="n">plug</span><span class="p">[</span><span class="n">j</span><span class="p">]</span> <span class="o">==</span> <span class="n">useArr</span><span class="p">[</span><span class="n">k</span><span class="p">])</span>
                <span class="p">{</span>
                    <span class="n">check</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
                    <span class="k">if</span><span class="p">(</span><span class="n">max</span> <span class="o">&lt;</span> <span class="n">k</span><span class="p">)</span> <span class="p">{</span>
                        <span class="n">max</span> <span class="o">=</span> <span class="n">k</span><span class="p">;</span>
                        <span class="n">index</span> <span class="o">=</span> <span class="n">j</span><span class="p">;</span>
                    <span class="p">}</span>
                    <span class="k">break</span><span class="p">;</span>
                <span class="p">}</span>
            <span class="p">}</span>
            <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="n">check</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="n">max</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
                <span class="n">index</span> <span class="o">=</span> <span class="n">j</span><span class="p">;</span>
                <span class="k">break</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="p">}</span>
        <span class="n">plug</span><span class="p">[</span><span class="n">index</span><span class="p">]</span> <span class="o">=</span> <span class="n">useArr</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
        <span class="n">result</span><span class="o">++</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">result</span><span class="p">;</span>
    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>]]></content><author><name>star-sil</name><email>kimse9811@naver.com</email></author><category term="BOJ" /><summary type="html"><![CDATA[문제 BOJ_1700 멀티탭 스케줄링]]></summary></entry></feed>